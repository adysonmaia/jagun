#############################################################################
# Makefile for building: Jagun
# Generated by qmake (2.01a) (Qt 4.2.3) on: seg nov 19 14:21:52 2007
# Project:  Jagun.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile Jagun.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
LEX           = flex
YACC          = yacc
DEFINES       = -DQT_NO_DEBUG -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT  $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT  $(DEFINES)
LEXFLAGS      = 
YACCFLAGS     = -d
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4/QtXml -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I. -I/usr/X11R6/include -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -lQtXml -lQtOpenGL -lQtGui -lQtCore -lGLU -lGL -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = arco.cpp \
		boundbox.cpp \
		canvas.cpp \
		figura.cpp \
		figuraBound.cpp \
		main.cpp \
		mainWindow.cpp \
		poligono.cpp \
		polilinha.cpp moc_canvas.cpp \
		moc_mainWindow.cpp \
		qrc_jagun.cpp
OBJECTS       = arco.o \
		boundbox.o \
		canvas.o \
		figura.o \
		figuraBound.o \
		main.o \
		mainWindow.o \
		poligono.o \
		polilinha.o \
		moc_canvas.o \
		moc_mainWindow.o \
		qrc_jagun.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		Jagun.pro
QMAKE_TARGET  = Jagun
DESTDIR       = 
TARGET        = Jagun

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Jagun.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf
	$(QMAKE) -unix -o Makefile Jagun.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile Jagun.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Jagun1.0.0 || $(MKDIR) .tmp/Jagun1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Jagun1.0.0/ && $(COPY_FILE) --parents arco.hpp boundbox.hpp canvas.hpp figura.hpp figuraBound.hpp mainWindow.hpp poligono.hpp polilinha.hpp .tmp/Jagun1.0.0/ && $(COPY_FILE) --parents jagun.qrc .tmp/Jagun1.0.0/ && $(COPY_FILE) --parents arco.cpp boundbox.cpp canvas.cpp figura.cpp figuraBound.cpp main.cpp mainWindow.cpp poligono.cpp polilinha.cpp .tmp/Jagun1.0.0/ && (cd `dirname .tmp/Jagun1.0.0` && $(TAR) Jagun1.0.0.tar Jagun1.0.0 && $(COMPRESS) Jagun1.0.0.tar) && $(MOVE) `dirname .tmp/Jagun1.0.0`/Jagun1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Jagun1.0.0


yaccclean:
lexclean:
clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


/usr/bin/moc-qt4:
	(cd $(QTDIR)/src/tools/moc && $(MAKE))

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_canvas.cpp moc_mainWindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_canvas.cpp moc_mainWindow.cpp
moc_canvas.cpp: figura.hpp \
		polilinha.hpp \
		figuraBound.hpp \
		poligono.hpp \
		boundbox.hpp \
		arco.hpp \
		canvas.hpp \
		/usr/bin/moc-qt4
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) canvas.hpp -o moc_canvas.cpp

moc_mainWindow.cpp: figura.hpp \
		polilinha.hpp \
		mainWindow.hpp \
		/usr/bin/moc-qt4
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainWindow.hpp -o moc_mainWindow.cpp

compiler_rcc_make_all: qrc_jagun.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_jagun.cpp
qrc_jagun.cpp: jagun.qrc \
		/usr/bin/rcc \
		imagens/new.png \
		imagens/splash.png \
		imagens/linhaC.png \
		imagens/linha.png \
		imagens/poligono.png \
		imagens/cut.png \
		imagens/copy.png \
		imagens/icon.png \
		imagens/save.png \
		imagens/arco.png \
		imagens/arco.png \
		imagens/paste.png \
		imagens/seta.png \
		imagens/poligonoC.png \
		imagens/arcoC.png \
		imagens/open.png \
		imagens/go.png
	/usr/bin/rcc -name jagun jagun.qrc -o qrc_jagun.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_image_collection_clean compiler_moc_source_clean compiler_uic_clean 

####### Compile

arco.o: arco.cpp arco.hpp \
		figuraBound.hpp \
		figura.hpp \
		boundbox.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o arco.o arco.cpp

boundbox.o: boundbox.cpp boundbox.hpp \
		figuraBound.hpp \
		figura.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o boundbox.o boundbox.cpp

canvas.o: canvas.cpp canvas.hpp \
		figura.hpp \
		polilinha.hpp \
		figuraBound.hpp \
		poligono.hpp \
		boundbox.hpp \
		arco.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o canvas.o canvas.cpp

figura.o: figura.cpp figura.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o figura.o figura.cpp

figuraBound.o: figuraBound.cpp figuraBound.hpp \
		figura.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o figuraBound.o figuraBound.cpp

main.o: main.cpp mainWindow.hpp \
		figura.hpp \
		polilinha.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainWindow.o: mainWindow.cpp mainWindow.hpp \
		figura.hpp \
		polilinha.hpp \
		canvas.hpp \
		figuraBound.hpp \
		poligono.hpp \
		boundbox.hpp \
		arco.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainWindow.o mainWindow.cpp

poligono.o: poligono.cpp poligono.hpp \
		figuraBound.hpp \
		figura.hpp \
		boundbox.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o poligono.o poligono.cpp

polilinha.o: polilinha.cpp polilinha.hpp \
		figura.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o polilinha.o polilinha.cpp

moc_canvas.o: moc_canvas.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_canvas.o moc_canvas.cpp

moc_mainWindow.o: moc_mainWindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainWindow.o moc_mainWindow.cpp

qrc_jagun.o: qrc_jagun.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_jagun.o qrc_jagun.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

